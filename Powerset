// what powerset is doing is, creating binay numbers from 0 to (2**len(string))-1   i.e, since we have 2**len(string) subsets in a string
//if the length is 3 we will have 7 subsets which is 2**len(string)..
//suppose "abc" is the string we generate 
/*  000--->0----->[]
    001--->1----->['c']
    010--->2----->['b']
    011--->3----->['b','c']
    100--->4----->['a']
    101--->5----->['a','c']
    110--->6----->['a','b']
    111--->7----->['a','b','c']          */
//every time we generated a binary number  the set bits in that binary numbers will be stored 
//into a vector and display..
#include<bits/stdc++.h>
using namespace std;
int main()
{
	string s="123";
	vector<vector<char>>ans;
	for(int i=0;i<pow(2,s.length());i++){
		vector<char>dummy;
		for(int j=0;j<s.length();j++){
			if(i&(1<<j)){
					dummy.push_back(s[j]);
			}
		}ans.push_back(dummy);
	}
	for(int i=0;i<ans.size();i++){
		for (int j=0;j<ans[i].size();j++){
			cout<<ans[i][j]<<" ";
		}
		cout<<endl;
	}
}
Output:
    1 
    2 
    1 2 
    3 
    1 3 
    2 3 
    1 2 3     
